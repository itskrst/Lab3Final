package AuctionBidding;


import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class main {

	public static void main(String[] args) {
		

		        ArrayList<dataEntry> data = new ArrayList<dataEntry>();

		        String[] menuOptions = {"Register", "Buy", "Sell", "Auction Winners", "Feedback", "Exit"};
		        Scanner scanner = new Scanner(System.in);
		        boolean exitProgram = false;
		        sell seller = null;

		        while (!exitProgram) {

		            System.out.println("\nMenu:");
		            for (int i = 0; i < menuOptions.length; i++) {
		                System.out.println((i + 1) + ". " + menuOptions[i]);
		            }

		            System.out.print("\nEnter the number of your choice: ");
		            int choice = scanner.nextInt();
		            scanner.nextLine();

		            if (choice == 1) {
		                System.out.println("\n-- Registration --");
		                System.out.print("1. Buyer\n2. Seller\n");
		                System.out.print("\nEnter choice: ");
		                String input = scanner.nextLine();

		                if (input.equals("1")) {
		                    System.out.print("\nEnter Name: ");
		                    String name = scanner.nextLine();

		                    System.out.print("Enter Email: ");
		                    String email = scanner.nextLine();

		                    System.out.print("Enter Password: ");
		                    String password = scanner.nextLine();

		                    System.out.print("Enter Home Address: ");
		                    String homeAdd = scanner.nextLine();

		                    System.out.print("Enter Shipping Address: ");
		                    String shipAdd = scanner.nextLine();

		                    System.out.print("Enter Phone Number: ");
		                    String phoneNumber = scanner.nextLine();

		                    data.add(new dataEntry(name, email, password, homeAdd, shipAdd, phoneNumber));
		                } else if (input.equals("2")) {
		                    System.out.print("\nEnter Name: ");
		                    String Name = scanner.nextLine();

		                    System.out.print("Enter Email: ");
		                    String Email = scanner.nextLine();

		                    System.out.print("Enter Password: ");
		                    String Password = scanner.nextLine();

		                    System.out.print("Enter Home Address: ");
		                    String homeAddress = scanner.nextLine();

		                    System.out.print("Enter Bank Account: ");
		                    String bankAccount = scanner.nextLine();

		                    System.out.print("Enter Routing Number: ");
		                    String routingNumber = scanner.nextLine();

		                    System.out.print("Enter Phone Number: ");
		                    String PhoneNumber = scanner.nextLine();

		                    data.add(new dataEntry(Name, Email, Password, homeAddress, bankAccount, routingNumber, PhoneNumber));

		                    System.out.print("\nProceed to sell items? (y/n) ");
		                    String proceed = scanner.nextLine();

		                    if (proceed.equalsIgnoreCase("y")) {
		                        seller = new sell();
		                        seller.sell(scanner);
		                    }
		                } else {
		                    System.out.println("Invalid choice.");
		                }
		            } else if (choice == 2) {
		                if (seller != null) {
		                    if (seller.getItemsListSize() > 0) {
		                        seller.showItemsWithNumbers();
		                        System.out.print("Choose item: ");
		                        int itemNumber = scanner.nextInt();
		                        scanner.nextLine();

		                        if (itemNumber >= 1 && itemNumber <= seller.getItemsListSize()) {
		                            item selectedItem = seller.getItemByNumber(itemNumber);
		                            seller.showItems(selectedItem);

		                            System.out.print("Place a bid on this item? (y/n): ");
		                            String placeBidChoice = scanner.nextLine();
		                            if (placeBidChoice.equalsIgnoreCase("y")) {
		                                seller.placeBid(scanner, selectedItem, data.get(0)); 
		                            }
		                        } else {
		                            System.out.println("Invalid item number.");
		                        }
		                    } else {
		                        System.out.println("\nYou need to register as a buyer and add items first.");
		                    }
		                } else {
		                    System.out.println("\nYou need to register as a buyer first.");
		                }
		            } else if (choice == 3) {
		                if (seller != null) {
		                    seller.sell(scanner);
		                } else {
		                    System.out.println("\nYou need to register as a seller first.");
		                }
		            } else if (choice == 4) {
		                if (seller != null) {
		                    System.out.println("\n-- Auction Winners --");
		                    for (item auctionItem : seller.getItemsList()) {
		                        Bid highestBid = auctionItem.getHighestBid();
		                        if (highestBid != null) {
		                            System.out.println("Item: " + auctionItem.getItem());
		                            System.out.println("Winner: " + highestBid.getBuyerName());
		                            System.out.println("Winning Bid: ₱" + highestBid.getBidAmount());
		                        }
		                    }
		                } else {
		                    System.out.println("\nYou need to register as a seller first.");
		                }
		            } else if (choice == 5) {
		                // Feedback logic here
		                // ...
		            } else if (choice == 6) {
		                exitProgram = true;
		            } else {
		                System.out.println("Invalid choice.");
		            }
		        }
		    }
		}

	

		 class dataEntry {

		    String name;
		    String email, password;
		    String homeAddress, shippingAddress;
		    String bankAccount, routingNumber, phoneNumber;

		    dataEntry(String Name,
		              String Email,
		              String Password,
		              String HomeAddress,
		              String ShippingAddress,
		              String phoneNum
		    ) {
		        this.name = Name;
		        this.email = Email;
		        this.password = Password;
		        this.homeAddress = HomeAddress;
		        this.shippingAddress = ShippingAddress;
		        this.phoneNumber = phoneNum;
		    }

		    dataEntry(String name,
		              String email,
		              String password,
		              String homeAddress,
		              String BankAccount,
		              String RoutingNumber,
		              String phoneNumber) {
		        this.name = name;
		        this.email = email;
		        this.password = password;
		        this.homeAddress = homeAddress;
		        this.bankAccount = BankAccount;
		        this.routingNumber = RoutingNumber;
		        this.phoneNumber = phoneNumber;
		    }
		}

	

		 class sell {

		    private ArrayList<item> itemsList = new ArrayList<item>();

		    public void addItem(item item) {
		        itemsList.add(item);
		    }

		    public void sell(Scanner scanner) {
		        System.out.print("\nEnter Name of Item: ");
		        String itemName = scanner.nextLine();

		        System.out.print("Enter Item Description: ");
		        String itemDescription = scanner.nextLine();

		        System.out.print("Enter Starting Bid Price: ₱");
		        double startingBid = scanner.nextDouble();

		        scanner.nextLine();

		        System.out.print("Enter Bidding Increment: ₱");
		        double bidIncrement = scanner.nextDouble();

		        scanner.nextLine();

		        System.out.print("Enter Beginning of the Auction (MM/DD/YYYY): ");
		        String begin = scanner.nextLine();

		        System.out.print("Enter Auction Closure Date (MM/DD/YYYY): ");
		        String closure = scanner.nextLine();

		        item newItem = new item(itemName, itemDescription, begin, closure, startingBid, bidIncrement);
		        addItem(newItem);
		    }

		    public void showItems(item item) {
		        for (item item1 : itemsList) {
		            System.out.println("\nItem: " + item1.getItem());
		            System.out.println("Description: " + item1.getDescription());
		            System.out.println("Starting Price: ₱" + item1.getStartingBid());
		            System.out.println("Bidding Increment: ₱" + item1.getBidIncrement());
		            System.out.println("Starting Date of the Auction: " + item1.getBegin());
		            System.out.println("Ending of the Auction: " + item1.getClosure());
		            System.out.println();
		        }
		    }

		    public void showItemsWithNumbers() {
		        System.out.println("\n-- Items Available  --");
		        for (int i = 0; i < itemsList.size(); i++) {
		            System.out.println((i + 1) + ". " + itemsList.get(i).getItem());
		        }
		    }

		    public int getItemsListSize() {
		        return itemsList.size();
		    }

		    public item getItemByNumber(int itemNumber) {
		        if (itemNumber >= 1 && itemNumber <= itemsList.size()) {
		            return itemsList.get(itemNumber - 1);
		        }
		        return null;
		    }

		    public void placeBid(Scanner scanner, item item, dataEntry buyer) {
		        System.out.print("Enter your bid amount: ₱");
		        double bidAmount = scanner.nextDouble();
		        scanner.nextLine();

		        item.placeBid(buyer.name, buyer.email, bidAmount);
		        System.out.println("Bid placed successfully.");
		    }

		    public List<item> getItemsList() {
		        return itemsList;
		    }
		}

		

		 class item {
		    private String item, description, begin, closure;
		    private double startingBid, bidIncrement;
		    private ArrayList<Bid> bids = new ArrayList<Bid>();

		    public item(String item, String description, String begin, String closure, double startingBid, double bidIncrement) {
		        this.item = item;
		        this.description = description;
		        this.begin = begin;
		        this.closure = closure;
		        this.startingBid = startingBid;
		        this.bidIncrement = bidIncrement;
		    }

		    public String getItem() {
		        return item;
		    }

		    public String getDescription() {
		        return description;
		    }

		    public String getBegin() {
		        return begin;
		    }

		    public String getClosure() {
		        return closure;
		    }

		    public double getStartingBid() {
		        return startingBid;
		    }

		    public double getBidIncrement() {
		        return bidIncrement;
		    }

		    public void placeBid(String buyerName, String buyerEmail, double bidAmount) {
		        Bid bid = new Bid(buyerName, buyerEmail, bidAmount);
		        bids.add(bid);
		    }

		    public Bid getHighestBid() {
		        Bid highestBid = null;
		        double maxBidAmount = 0.0;

		        for (Bid bid : bids) {
		            if (bid.getBidAmount() > maxBidAmount) {
		                maxBidAmount = bid.getBidAmount();
		                highestBid = bid;
		            }
		        }

		        return highestBid;
		    }
		}

		

		 class Bid {
		    private String buyerName;
		    private String buyerEmail;
		    private double bidAmount;

		    public Bid(String buyerName, String buyerEmail, double bidAmount) {
		        this.buyerName = buyerName;
		        this.buyerEmail = buyerEmail;
		        this.bidAmount = bidAmount;
		    }

		    public String getBuyerName() {
		        return buyerName;
		    }

		    public String getBuyerEmail() {
		        return buyerEmail;
		    }

		    public double getBidAmount() {
		        return bidAmount;
		    }
		

	}


